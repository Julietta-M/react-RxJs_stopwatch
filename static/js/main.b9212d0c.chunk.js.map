{"version":3,"sources":["App.js","index.js"],"names":["App","useState","time","setTime","state","setState","click$","Subject","useEffect","pipe","buffer","debounceTime","map","list","length","filter","x","timer$","interval","takeUntil","subscribe","val","next","complete","className","getSeconds","slice","minutes","Math","floor","getMinutes","getHours","formatTime","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"oRAsGeA,MAhGf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,QAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAS,IAAIC,IAuDnB,OArDAC,qBAAU,WACaF,EAAOG,KAC1BC,YACEJ,EAAOG,KAAKE,YAAa,OAE3BC,aAAI,SAAAC,GAAI,OAAIA,EAAKC,UACjBC,aAAO,SAAAC,GAAC,OAAU,IAANA,MALd,IAQMC,EAAS,IAAIV,IAUnB,OARAW,YAAS,KACNT,KAAKU,YAAUF,IACfG,WAAU,WACK,UAAVhB,GACFD,GAAQ,SAAAkB,GAAG,OAAIA,EAAM,QAIpB,WACLJ,EAAOK,OACPL,EAAOM,cAER,CAACnB,EAAOE,IA+BT,yBAAKkB,UAAU,gDACb,yBAAKA,UAAU,QAXA,WACjB,IAAMC,EAAa,WAAKvB,EAAO,IAAMwB,OAAO,GACtCC,EAAO,UAAMC,KAAKC,MAAM3B,EAAO,KAC/B4B,EAAa,WAAIH,EAAU,IAAKD,OAAO,GACvCK,EAAW,WAAIH,KAAKC,MAAM3B,EAAO,OAAQwB,OAAO,GAEtD,MAAM,GAAN,OAAUK,EAAV,cAAwBD,EAAxB,cAAwCL,GAMnCO,IAEH,4BACER,UAAU,kBACVS,KAAK,SACLC,QApCQ,WACZ7B,EAAS,WAgCP,SAOA,4BACEmB,UAAU,iBACVS,KAAK,SACLC,QAvCO,WACX7B,EAAS,QACTF,EAAQ,KAkCN,QAOA,4BACEqB,UAAU,kBACVS,KAAK,SACLC,QAzCQ,WACZ/B,EAAQ,KAqCN,SAOA,4BACEqB,UAAU,kBACVS,KAAK,SACLC,QA5CO,WACX5B,EAAOgB,OACPjB,EAAS,QACTC,EAAOgB,SAsCL,UCvFNa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.b9212d0c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nimport { interval, Subject } from 'rxjs';\nimport { takeUntil, buffer, map, filter, debounceTime } from 'rxjs/operators';\n\nfunction App() {\n  const [time, setTime] = useState(0);\n  const [state, setState] = useState('stop');\n\n  const click$ = new Subject();\n\n  useEffect(() => {\n    const doubleClick$ = click$.pipe(\n      buffer(\n        click$.pipe(debounceTime(300)),\n      ),\n      map(list => list.length),\n      filter(x => x === 2),\n    );\n\n    const timer$ = new Subject();\n\n    interval(1000)\n      .pipe(takeUntil(timer$))\n      .subscribe(() => {\n        if (state === 'start') {\n          setTime(val => val + 1);\n        }\n      });\n\n    return () => {\n      timer$.next();\n      timer$.complete();\n    };\n  }, [state, click$]);\n\n  const start = () => {\n    setState('start');\n  };\n\n  const stop = () => {\n    setState('stop');\n    setTime(0);\n  };\n\n  const reset = () => {\n    setTime(0);\n  };\n\n  const wait = () => {\n    click$.next();\n    setState('wait');\n    click$.next();\n  };\n\n  const formatTime = () => {\n    const getSeconds = `0${(time % 60)}`.slice(-2);\n    const minutes = `${Math.floor(time / 60)}`;\n    const getMinutes = `0${minutes % 60}`.slice(-2);\n    const getHours = `0${Math.floor(time / 3600)}`.slice(-2);\n\n    return `${getHours} : ${getMinutes} : ${getSeconds}`;\n  };\n\n  return (\n    <div className=\"container shadow-sm p-3 mb-5 bg-body rounded\">\n      <div className=\"date\">\n        {formatTime()}\n      </div>\n      <button\n        className=\"btn btn-success\"\n        type=\"button\"\n        onClick={start}\n      >\n        Start\n      </button>\n      <button\n        className=\"btn btn-danger\"\n        type=\"button\"\n        onClick={stop}\n      >\n        Stop\n      </button>\n      <button\n        className=\"btn btn-primary\"\n        type=\"button\"\n        onClick={reset}\n      >\n        Reset\n      </button>\n      <button\n        className=\"btn btn-warning\"\n        type=\"button\"\n        onClick={wait}\n      >\n        Wait\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}